/*
 * This file is generated by jOOQ.
 */
package com.example.jooq.demo_jooq.introduction.db.pg_catalog.routines;


import com.example.jooq.demo_jooq.introduction.db.pg_catalog.PgCatalog;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.JSON;
import org.jooq.Parameter;
import org.jooq.impl.AbstractRoutine;
import org.jooq.impl.Internal;



/**
 * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
 */
@java.lang.Deprecated
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class JsonPopulateRecord extends AbstractRoutine<Object> {

    private static final long serialVersionUID = -128100758;

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @java.lang.Deprecated
    public static final Parameter<Object> RETURN_VALUE = Internal.createParameter("RETURN_VALUE", org.jooq.impl.DefaultDataType.getDefaultDataType("\"pg_catalog\".\"anyelement\""), false, false);

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @java.lang.Deprecated
    public static final Parameter<Object> BASE = Internal.createParameter("base", org.jooq.impl.DefaultDataType.getDefaultDataType("\"pg_catalog\".\"anyelement\""), false, false);

    /**
     * The parameter <code>pg_catalog.json_populate_record.from_json</code>.
     */
    public static final Parameter<JSON> FROM_JSON = Internal.createParameter("from_json", org.jooq.impl.SQLDataType.JSON, false, false);

    /**
     * The parameter <code>pg_catalog.json_populate_record.use_json_as_text</code>.
     */
    public static final Parameter<Boolean> USE_JSON_AS_TEXT = Internal.createParameter("use_json_as_text", org.jooq.impl.SQLDataType.BOOLEAN.defaultValue(org.jooq.impl.DSL.field("false", org.jooq.impl.SQLDataType.BOOLEAN)), true, false);

    /**
     * Create a new routine call instance
     */
    public JsonPopulateRecord() {
        super("json_populate_record", PgCatalog.PG_CATALOG, org.jooq.impl.DefaultDataType.getDefaultDataType("\"pg_catalog\".\"anyelement\""));

        setReturnParameter(RETURN_VALUE);
        addInParameter(BASE);
        addInParameter(FROM_JSON);
        addInParameter(USE_JSON_AS_TEXT);
    }

    /**
     * Set the <code>base</code> parameter IN value to the routine
     */
    public void setBase(Object value) {
        setValue(BASE, value);
    }

    /**
     * Set the <code>base</code> parameter to the function to be used with a {@link org.jooq.Select} statement
     */
    public void setBase(Field<Object> field) {
        setField(BASE, field);
    }

    /**
     * Set the <code>from_json</code> parameter IN value to the routine
     */
    public void setFromJson(JSON value) {
        setValue(FROM_JSON, value);
    }

    /**
     * Set the <code>from_json</code> parameter to the function to be used with a {@link org.jooq.Select} statement
     */
    public void setFromJson(Field<JSON> field) {
        setField(FROM_JSON, field);
    }

    /**
     * Set the <code>use_json_as_text</code> parameter IN value to the routine
     */
    public void setUseJsonAsText(Boolean value) {
        setValue(USE_JSON_AS_TEXT, value);
    }

    /**
     * Set the <code>use_json_as_text</code> parameter to the function to be used with a {@link org.jooq.Select} statement
     */
    public void setUseJsonAsText(Field<Boolean> field) {
        setField(USE_JSON_AS_TEXT, field);
    }
}
