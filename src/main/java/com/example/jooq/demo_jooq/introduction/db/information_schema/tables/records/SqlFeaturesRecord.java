/*
 * This file is generated by jOOQ.
 */
package com.example.jooq.demo_jooq.introduction.db.information_schema.tables.records;


import com.example.jooq.demo_jooq.introduction.db.information_schema.tables.SqlFeatures;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SqlFeaturesRecord extends TableRecordImpl<SqlFeaturesRecord> implements Record7<String, String, String, String, String, String, String> {

    private static final long serialVersionUID = -1353278282;

    /**
     * Setter for <code>information_schema.sql_features.feature_id</code>.
     */
    public void setFeatureId(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>information_schema.sql_features.feature_id</code>.
     */
    public String getFeatureId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>information_schema.sql_features.feature_name</code>.
     */
    public void setFeatureName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>information_schema.sql_features.feature_name</code>.
     */
    public String getFeatureName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>information_schema.sql_features.sub_feature_id</code>.
     */
    public void setSubFeatureId(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>information_schema.sql_features.sub_feature_id</code>.
     */
    public String getSubFeatureId() {
        return (String) get(2);
    }

    /**
     * Setter for <code>information_schema.sql_features.sub_feature_name</code>.
     */
    public void setSubFeatureName(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>information_schema.sql_features.sub_feature_name</code>.
     */
    public String getSubFeatureName() {
        return (String) get(3);
    }

    /**
     * Setter for <code>information_schema.sql_features.is_supported</code>.
     */
    public void setIsSupported(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>information_schema.sql_features.is_supported</code>.
     */
    public String getIsSupported() {
        return (String) get(4);
    }

    /**
     * Setter for <code>information_schema.sql_features.is_verified_by</code>.
     */
    public void setIsVerifiedBy(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>information_schema.sql_features.is_verified_by</code>.
     */
    public String getIsVerifiedBy() {
        return (String) get(5);
    }

    /**
     * Setter for <code>information_schema.sql_features.comments</code>.
     */
    public void setComments(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>information_schema.sql_features.comments</code>.
     */
    public String getComments() {
        return (String) get(6);
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row7<String, String, String, String, String, String, String> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    @Override
    public Row7<String, String, String, String, String, String, String> valuesRow() {
        return (Row7) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return SqlFeatures.SQL_FEATURES.FEATURE_ID;
    }

    @Override
    public Field<String> field2() {
        return SqlFeatures.SQL_FEATURES.FEATURE_NAME;
    }

    @Override
    public Field<String> field3() {
        return SqlFeatures.SQL_FEATURES.SUB_FEATURE_ID;
    }

    @Override
    public Field<String> field4() {
        return SqlFeatures.SQL_FEATURES.SUB_FEATURE_NAME;
    }

    @Override
    public Field<String> field5() {
        return SqlFeatures.SQL_FEATURES.IS_SUPPORTED;
    }

    @Override
    public Field<String> field6() {
        return SqlFeatures.SQL_FEATURES.IS_VERIFIED_BY;
    }

    @Override
    public Field<String> field7() {
        return SqlFeatures.SQL_FEATURES.COMMENTS;
    }

    @Override
    public String component1() {
        return getFeatureId();
    }

    @Override
    public String component2() {
        return getFeatureName();
    }

    @Override
    public String component3() {
        return getSubFeatureId();
    }

    @Override
    public String component4() {
        return getSubFeatureName();
    }

    @Override
    public String component5() {
        return getIsSupported();
    }

    @Override
    public String component6() {
        return getIsVerifiedBy();
    }

    @Override
    public String component7() {
        return getComments();
    }

    @Override
    public String value1() {
        return getFeatureId();
    }

    @Override
    public String value2() {
        return getFeatureName();
    }

    @Override
    public String value3() {
        return getSubFeatureId();
    }

    @Override
    public String value4() {
        return getSubFeatureName();
    }

    @Override
    public String value5() {
        return getIsSupported();
    }

    @Override
    public String value6() {
        return getIsVerifiedBy();
    }

    @Override
    public String value7() {
        return getComments();
    }

    @Override
    public SqlFeaturesRecord value1(String value) {
        setFeatureId(value);
        return this;
    }

    @Override
    public SqlFeaturesRecord value2(String value) {
        setFeatureName(value);
        return this;
    }

    @Override
    public SqlFeaturesRecord value3(String value) {
        setSubFeatureId(value);
        return this;
    }

    @Override
    public SqlFeaturesRecord value4(String value) {
        setSubFeatureName(value);
        return this;
    }

    @Override
    public SqlFeaturesRecord value5(String value) {
        setIsSupported(value);
        return this;
    }

    @Override
    public SqlFeaturesRecord value6(String value) {
        setIsVerifiedBy(value);
        return this;
    }

    @Override
    public SqlFeaturesRecord value7(String value) {
        setComments(value);
        return this;
    }

    @Override
    public SqlFeaturesRecord values(String value1, String value2, String value3, String value4, String value5, String value6, String value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached SqlFeaturesRecord
     */
    public SqlFeaturesRecord() {
        super(SqlFeatures.SQL_FEATURES);
    }

    /**
     * Create a detached, initialised SqlFeaturesRecord
     */
    public SqlFeaturesRecord(String featureId, String featureName, String subFeatureId, String subFeatureName, String isSupported, String isVerifiedBy, String comments) {
        super(SqlFeatures.SQL_FEATURES);

        set(0, featureId);
        set(1, featureName);
        set(2, subFeatureId);
        set(3, subFeatureName);
        set(4, isSupported);
        set(5, isVerifiedBy);
        set(6, comments);
    }
}
