/*
 * This file is generated by jOOQ.
 */
package com.example.jooq.demo_jooq.introduction.db.pg_catalog.tables.records;


import com.example.jooq.demo_jooq.introduction.db.pg_catalog.tables.PgAmproc;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PgAmprocRecord extends TableRecordImpl<PgAmprocRecord> implements Record5<Long, Long, Long, Short, String> {

    private static final long serialVersionUID = -1981171803;

    /**
     * Setter for <code>pg_catalog.pg_amproc.amprocfamily</code>.
     */
    public void setAmprocfamily(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_amproc.amprocfamily</code>.
     */
    public Long getAmprocfamily() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>pg_catalog.pg_amproc.amproclefttype</code>.
     */
    public void setAmproclefttype(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_amproc.amproclefttype</code>.
     */
    public Long getAmproclefttype() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>pg_catalog.pg_amproc.amprocrighttype</code>.
     */
    public void setAmprocrighttype(Long value) {
        set(2, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_amproc.amprocrighttype</code>.
     */
    public Long getAmprocrighttype() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>pg_catalog.pg_amproc.amprocnum</code>.
     */
    public void setAmprocnum(Short value) {
        set(3, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_amproc.amprocnum</code>.
     */
    public Short getAmprocnum() {
        return (Short) get(3);
    }

    /**
     * Setter for <code>pg_catalog.pg_amproc.amproc</code>.
     */
    public void setAmproc(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_amproc.amproc</code>.
     */
    public String getAmproc() {
        return (String) get(4);
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<Long, Long, Long, Short, String> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<Long, Long, Long, Short, String> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return PgAmproc.PG_AMPROC.AMPROCFAMILY;
    }

    @Override
    public Field<Long> field2() {
        return PgAmproc.PG_AMPROC.AMPROCLEFTTYPE;
    }

    @Override
    public Field<Long> field3() {
        return PgAmproc.PG_AMPROC.AMPROCRIGHTTYPE;
    }

    @Override
    public Field<Short> field4() {
        return PgAmproc.PG_AMPROC.AMPROCNUM;
    }

    @Override
    public Field<String> field5() {
        return PgAmproc.PG_AMPROC.AMPROC;
    }

    @Override
    public Long component1() {
        return getAmprocfamily();
    }

    @Override
    public Long component2() {
        return getAmproclefttype();
    }

    @Override
    public Long component3() {
        return getAmprocrighttype();
    }

    @Override
    public Short component4() {
        return getAmprocnum();
    }

    @Override
    public String component5() {
        return getAmproc();
    }

    @Override
    public Long value1() {
        return getAmprocfamily();
    }

    @Override
    public Long value2() {
        return getAmproclefttype();
    }

    @Override
    public Long value3() {
        return getAmprocrighttype();
    }

    @Override
    public Short value4() {
        return getAmprocnum();
    }

    @Override
    public String value5() {
        return getAmproc();
    }

    @Override
    public PgAmprocRecord value1(Long value) {
        setAmprocfamily(value);
        return this;
    }

    @Override
    public PgAmprocRecord value2(Long value) {
        setAmproclefttype(value);
        return this;
    }

    @Override
    public PgAmprocRecord value3(Long value) {
        setAmprocrighttype(value);
        return this;
    }

    @Override
    public PgAmprocRecord value4(Short value) {
        setAmprocnum(value);
        return this;
    }

    @Override
    public PgAmprocRecord value5(String value) {
        setAmproc(value);
        return this;
    }

    @Override
    public PgAmprocRecord values(Long value1, Long value2, Long value3, Short value4, String value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PgAmprocRecord
     */
    public PgAmprocRecord() {
        super(PgAmproc.PG_AMPROC);
    }

    /**
     * Create a detached, initialised PgAmprocRecord
     */
    public PgAmprocRecord(Long amprocfamily, Long amproclefttype, Long amprocrighttype, Short amprocnum, String amproc) {
        super(PgAmproc.PG_AMPROC);

        set(0, amprocfamily);
        set(1, amproclefttype);
        set(2, amprocrighttype);
        set(3, amprocnum);
        set(4, amproc);
    }
}
