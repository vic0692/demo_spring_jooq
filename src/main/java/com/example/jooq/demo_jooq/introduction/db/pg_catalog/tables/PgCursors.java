/*
 * This file is generated by jOOQ.
 */
package com.example.jooq.demo_jooq.introduction.db.pg_catalog.tables;


import com.example.jooq.demo_jooq.introduction.db.pg_catalog.PgCatalog;
import com.example.jooq.demo_jooq.introduction.db.pg_catalog.tables.records.PgCursorsRecord;

import java.time.OffsetDateTime;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row6;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PgCursors extends TableImpl<PgCursorsRecord> {

    private static final long serialVersionUID = -993581895;

    /**
     * The reference instance of <code>pg_catalog.pg_cursors</code>
     */
    public static final PgCursors PG_CURSORS = new PgCursors();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<PgCursorsRecord> getRecordType() {
        return PgCursorsRecord.class;
    }

    /**
     * The column <code>pg_catalog.pg_cursors.name</code>.
     */
    public final TableField<PgCursorsRecord, String> NAME = createField(DSL.name("name"), org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>pg_catalog.pg_cursors.statement</code>.
     */
    public final TableField<PgCursorsRecord, String> STATEMENT = createField(DSL.name("statement"), org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>pg_catalog.pg_cursors.is_holdable</code>.
     */
    public final TableField<PgCursorsRecord, Boolean> IS_HOLDABLE = createField(DSL.name("is_holdable"), org.jooq.impl.SQLDataType.BOOLEAN, this, "");

    /**
     * The column <code>pg_catalog.pg_cursors.is_binary</code>.
     */
    public final TableField<PgCursorsRecord, Boolean> IS_BINARY = createField(DSL.name("is_binary"), org.jooq.impl.SQLDataType.BOOLEAN, this, "");

    /**
     * The column <code>pg_catalog.pg_cursors.is_scrollable</code>.
     */
    public final TableField<PgCursorsRecord, Boolean> IS_SCROLLABLE = createField(DSL.name("is_scrollable"), org.jooq.impl.SQLDataType.BOOLEAN, this, "");

    /**
     * The column <code>pg_catalog.pg_cursors.creation_time</code>.
     */
    public final TableField<PgCursorsRecord, OffsetDateTime> CREATION_TIME = createField(DSL.name("creation_time"), org.jooq.impl.SQLDataType.TIMESTAMPWITHTIMEZONE, this, "");

    /**
     * Create a <code>pg_catalog.pg_cursors</code> table reference
     */
    public PgCursors() {
        this(DSL.name("pg_cursors"), null);
    }

    /**
     * Create an aliased <code>pg_catalog.pg_cursors</code> table reference
     */
    public PgCursors(String alias) {
        this(DSL.name(alias), PG_CURSORS);
    }

    /**
     * Create an aliased <code>pg_catalog.pg_cursors</code> table reference
     */
    public PgCursors(Name alias) {
        this(alias, PG_CURSORS);
    }

    private PgCursors(Name alias, Table<PgCursorsRecord> aliased) {
        this(alias, aliased, null);
    }

    private PgCursors(Name alias, Table<PgCursorsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> PgCursors(Table<O> child, ForeignKey<O, PgCursorsRecord> key) {
        super(child, key, PG_CURSORS);
    }

    @Override
    public Schema getSchema() {
        return PgCatalog.PG_CATALOG;
    }

    @Override
    public PgCursors as(String alias) {
        return new PgCursors(DSL.name(alias), this);
    }

    @Override
    public PgCursors as(Name alias) {
        return new PgCursors(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public PgCursors rename(String name) {
        return new PgCursors(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public PgCursors rename(Name name) {
        return new PgCursors(name, null);
    }

    // -------------------------------------------------------------------------
    // Row6 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row6<String, String, Boolean, Boolean, Boolean, OffsetDateTime> fieldsRow() {
        return (Row6) super.fieldsRow();
    }
}
