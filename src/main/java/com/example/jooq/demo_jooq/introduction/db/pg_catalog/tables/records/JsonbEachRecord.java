/*
 * This file is generated by jOOQ.
 */
package com.example.jooq.demo_jooq.introduction.db.pg_catalog.tables.records;


import com.example.jooq.demo_jooq.introduction.db.pg_catalog.tables.JsonbEach;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.JSONB;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class JsonbEachRecord extends TableRecordImpl<JsonbEachRecord> implements Record2<String, JSONB> {

    private static final long serialVersionUID = 1518504573;

    /**
     * Setter for <code>pg_catalog.jsonb_each.key</code>.
     */
    public void setKey(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>pg_catalog.jsonb_each.key</code>.
     */
    public String getKey() {
        return (String) get(0);
    }

    /**
     * Setter for <code>pg_catalog.jsonb_each.value</code>.
     */
    public void setValue(JSONB value) {
        set(1, value);
    }

    /**
     * Getter for <code>pg_catalog.jsonb_each.value</code>.
     */
    public JSONB getValue() {
        return (JSONB) get(1);
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row2<String, JSONB> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    @Override
    public Row2<String, JSONB> valuesRow() {
        return (Row2) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return JsonbEach.JSONB_EACH.KEY;
    }

    @Override
    public Field<JSONB> field2() {
        return JsonbEach.JSONB_EACH.VALUE;
    }

    @Override
    public String component1() {
        return getKey();
    }

    @Override
    public JSONB component2() {
        return getValue();
    }

    @Override
    public String value1() {
        return getKey();
    }

    @Override
    public JSONB value2() {
        return getValue();
    }

    @Override
    public JsonbEachRecord value1(String value) {
        setKey(value);
        return this;
    }

    @Override
    public JsonbEachRecord value2(JSONB value) {
        setValue(value);
        return this;
    }

    @Override
    public JsonbEachRecord values(String value1, JSONB value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached JsonbEachRecord
     */
    public JsonbEachRecord() {
        super(JsonbEach.JSONB_EACH);
    }

    /**
     * Create a detached, initialised JsonbEachRecord
     */
    public JsonbEachRecord(String key, JSONB value) {
        super(JsonbEach.JSONB_EACH);

        set(0, key);
        set(1, value);
    }
}
