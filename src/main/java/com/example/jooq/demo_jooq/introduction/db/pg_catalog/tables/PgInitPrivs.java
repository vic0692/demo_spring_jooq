/*
 * This file is generated by jOOQ.
 */
package com.example.jooq.demo_jooq.introduction.db.pg_catalog.tables;


import com.example.jooq.demo_jooq.introduction.db.pg_catalog.Indexes;
import com.example.jooq.demo_jooq.introduction.db.pg_catalog.PgCatalog;
import com.example.jooq.demo_jooq.introduction.db.pg_catalog.tables.records.PgInitPrivsRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row5;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PgInitPrivs extends TableImpl<PgInitPrivsRecord> {

    private static final long serialVersionUID = -810516764;

    /**
     * The reference instance of <code>pg_catalog.pg_init_privs</code>
     */
    public static final PgInitPrivs PG_INIT_PRIVS = new PgInitPrivs();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<PgInitPrivsRecord> getRecordType() {
        return PgInitPrivsRecord.class;
    }

    /**
     * The column <code>pg_catalog.pg_init_privs.objoid</code>.
     */
    public final TableField<PgInitPrivsRecord, Long> OBJOID = createField(DSL.name("objoid"), org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>pg_catalog.pg_init_privs.classoid</code>.
     */
    public final TableField<PgInitPrivsRecord, Long> CLASSOID = createField(DSL.name("classoid"), org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>pg_catalog.pg_init_privs.objsubid</code>.
     */
    public final TableField<PgInitPrivsRecord, Integer> OBJSUBID = createField(DSL.name("objsubid"), org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>pg_catalog.pg_init_privs.privtype</code>.
     */
    public final TableField<PgInitPrivsRecord, String> PRIVTYPE = createField(DSL.name("privtype"), org.jooq.impl.SQLDataType.CHAR.nullable(false), this, "");

    /**
     * The column <code>pg_catalog.pg_init_privs.initprivs</code>.
     */
    public final TableField<PgInitPrivsRecord, String[]> INITPRIVS = createField(DSL.name("initprivs"), org.jooq.impl.SQLDataType.VARCHAR.getArrayDataType(), this, "");

    /**
     * Create a <code>pg_catalog.pg_init_privs</code> table reference
     */
    public PgInitPrivs() {
        this(DSL.name("pg_init_privs"), null);
    }

    /**
     * Create an aliased <code>pg_catalog.pg_init_privs</code> table reference
     */
    public PgInitPrivs(String alias) {
        this(DSL.name(alias), PG_INIT_PRIVS);
    }

    /**
     * Create an aliased <code>pg_catalog.pg_init_privs</code> table reference
     */
    public PgInitPrivs(Name alias) {
        this(alias, PG_INIT_PRIVS);
    }

    private PgInitPrivs(Name alias, Table<PgInitPrivsRecord> aliased) {
        this(alias, aliased, null);
    }

    private PgInitPrivs(Name alias, Table<PgInitPrivsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> PgInitPrivs(Table<O> child, ForeignKey<O, PgInitPrivsRecord> key) {
        super(child, key, PG_INIT_PRIVS);
    }

    @Override
    public Schema getSchema() {
        return PgCatalog.PG_CATALOG;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.PG_INIT_PRIVS_O_C_O_INDEX);
    }

    @Override
    public PgInitPrivs as(String alias) {
        return new PgInitPrivs(DSL.name(alias), this);
    }

    @Override
    public PgInitPrivs as(Name alias) {
        return new PgInitPrivs(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public PgInitPrivs rename(String name) {
        return new PgInitPrivs(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public PgInitPrivs rename(Name name) {
        return new PgInitPrivs(name, null);
    }

    // -------------------------------------------------------------------------
    // Row5 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row5<Long, Long, Integer, String, String[]> fieldsRow() {
        return (Row5) super.fieldsRow();
    }
}
